"""
XX게임에선 캐릭터는 자신과 공격력이 같거나 자신보다 공격력이 작은 몬스터에게 이깁니다. 내가 가진 캐릭터가 최대 몬스터 몇 마리를 이길 수 있는지 구하려 합니다. 
단, 한 캐릭터는 한 번만 싸울 수 있습니다.
예를 들어, 세 몬스터의 공격력이 각각 [1, 4, 3]이고, 내가 가진 두 캐릭터의 공격력이 각각 [1, 3]이라면 첫 번째 캐릭터는 첫 번째 몬스터와, 두 번째 캐릭터는 세 번째 몬스터와 싸워서 이길 수 있습니다. 
따라서 이길 수 있는 몬스터 수는 최대 2마리입니다. 
모든 몬스터의 공격력을 담은 리스트 enemies, 내가 가진 모든 캐릭터의 공격력을 담은 리스트 armies가 매개변수로 주어질 때, 
내 캐릭터로는 최대 몬스터 몇 마리를 이길 수 있는지 return 하도록 solution 함수를 작성해주세요.

---
매개변수 설명
모든 몬스터의 공격력을 담은 리스트 enemies, 내가 가진 모든 캐릭터의 공격력을 담은 리스트 armies가 solution 함수의 매개변수로 주어집니다.
- 몬스터 수는 1마리 이상, 500마리 이하입니다.
- 각 몬스터의 공격력은 1 이상 100 이하입니다.
- 내가 가진 캐릭터 수는 1개 이상 500개 이하입니다.
- 각 캐릭터의 공격력은 1 이상 100 이하입니다.

---
return 값 설명
내가 가진 캐릭터로는 최대 몬스터 몇 마리를 이길 수 있는지 return 해주세요.

---
입출력 예
  enemies  	armies      	return
  [1, 4, 3]	[1, 3]      	2     
  [1, 1, 1]	[1, 2, 3, 4]	3     
"""

#다음과 같이 import를 사용할 수 있습니다.
#import math

def solution(enemies, armies):
    #여기에 코드를 작성해주세요.
    answer = 0
    # enemies안에 있는 몬스터들을 각각 확인하면서
    for mon in enemies:
        # 아군의 몬스터를 불러옴
        for mine in armies:
            # 아군의 몬스터가 현재 적군의 몬스터보다 크거나 같다면
            if mine >= mon:
                # mine을 제거하면서 처리 몬스터의 수를 올려주고 for문 armies의 for문을 탈출
                armies.remove(mine)
                answer += 1
                break
    return answer

#아래는 테스트케이스 출력을 해보기 위한 코드입니다.
enemies1 = [1, 4, 3]
armies1 = [1, 3]
ret1 = solution(enemies1, armies1)

#[실행] 버튼을 누르면 출력 값을 볼 수 있습니다.
print("solution 함수의 반환 값은", ret1, "입니다.")

enemies2 = [1, 1, 1]
armies2 = [1, 2, 3, 4]
ret2 = solution(enemies2, armies2)

#[실행] 버튼을 누르면 출력 값을 볼 수 있습니다.
print("solution 함수의 반환 값은", ret2, "입니다.")
